import{_ as a,o as n,c as l,C as e,N as p,D as t}from"./chunks/framework.e2c53219.js";const _=JSON.parse('{"title":"04-标识符、关键字、保留字","description":"","frontmatter":{"title":"04-标识符、关键字、保留字"},"headers":[],"relativePath":"javascript/basics/标识符、关键字、保留字.md"}'),o={name:"javascript/basics/标识符、关键字、保留字.md"},r=p(`<h2 id="变量的命名规则-重要" tabindex="-1">变量的命名规则（重要） <a class="header-anchor" href="#变量的命名规则-重要" aria-label="Permalink to &quot;变量的命名规则（重要）&quot;">​</a></h2><p>JS是大小敏感的语言。也就是说 A 和 a 是两个变量。大写字母是可以使用的，比如：</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> A </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">250</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//变量1</span></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> a </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">888</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//变量2</span></span>
<span class="line"></span></code></pre></div><p>我们来整理一下<strong>变量的命名规则</strong>，非常重要。</p><p>必须遵守：</p><ul><li>只能由字母(A-Z、a-z)、数字(0-9)、下划线(_)、美元符( $ )组成。</li><li>不能以数字开头。必须以字母(A-Z、a-z)、下划线(_)或者美元符( $ )开头。变量名中不允许出现空格。尤其注意，变量名中不能出现<strong>中划线</strong><code>-</code>，很多人写了多年代码都不知道这一点，让人大跌眼镜。</li><li>严格区分大小写（JS 是区分大小写的语言）。</li><li>不能使用 JS 语言中保留的「关键字」和「保留字」作为变量名。下一篇文章会讲。</li><li>变量名长度不能超过 255 个字符。</li><li></li><li>汉语可以作为变量名。但是不建议使用，因为 low。</li></ul><p>建议遵守：</p><ul><li><p>命名要有可读性，方便顾名思义。</p></li><li><p>建议用驼峰命名法。比如 getElementById、getUserInfo、aaaOrBbbAndCcc</p></li></ul><p><strong>补充</strong>：</p><p>1、不能以数字开头，是为了把数字和字母区分开。</p><p>2、JS底层保存标识符的时候，是采用的 Unicode 编码。所以理论上讲，在遵守命名规则的前提下，utf-8中包含的所有内容都可以作为标识符。</p><h2 id="标识符" tabindex="-1">标识符 <a class="header-anchor" href="#标识符" aria-label="Permalink to &quot;标识符&quot;">​</a></h2><p><strong>标识符</strong>：在 JS 中所有的可以由我们<strong>自主命名</strong>的都可以称之为标识符。包括：<strong>变量名、函数名、属性名、参数名</strong>都是属于标识符。</p><p>通俗来讲，标识符就是我们写代码时为某些东西起的名字。类似于人出生的时候，起个人名。</p><p><strong>标识符的命名规则</strong>和变量的命令规则是一样的。关于变量的命名规则，详见上一段。</p><p>标识符不能使用语言中保留的<strong>关键字</strong>及<strong>保留字</strong>。</p><h2 id="关键字" tabindex="-1">关键字 <a class="header-anchor" href="#关键字" aria-label="Permalink to &quot;关键字&quot;">​</a></h2><p><strong>关键字</strong>：被JS赋予了特殊含义的单词。也就是说，关键字是 JS 本身已经使用了的单词，我们不能再用它们充当变量名、函数名等标识符。关键字在开发工具中会显示特殊的颜色。</p><p>JS 中的关键字如下：</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">if、else、switch、break、case、default、for、in、do、while、</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">var、</span><span style="color:#82AAFF;">let</span><span style="color:#FFCB6B;">、const、void、function、continue、</span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#FFCB6B;">、</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">try、catch、finally、throw、debugger、</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">this、typeof、instanceof、delete、with、</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">export、new、class、extends、super、with、yield、import、static、</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">true</span><span style="color:#A6ACCD;">、</span><span style="color:#89DDFF;">false</span><span style="color:#A6ACCD;">、null、undefined、NaN</span></span>
<span class="line"></span></code></pre></div><h2 id="保留字" tabindex="-1">保留字 <a class="header-anchor" href="#保留字" aria-label="Permalink to &quot;保留字&quot;">​</a></h2><p><strong>保留字</strong>：实际上就是预留的“关键字”。它们虽然现在还不是关键字，但是未来可能会成为关键字。同样不能用它们当充当变量名、函数名等标识符。</p><p>JS 中的保留字如下：</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">enum、await</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">abstract、boolean、byte、char、double、final、float、goto、int、long、native、short、synchronized、transient、volatile、</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">arguments</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">eval</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Infinity</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 以下关键字只在严格模式中被当成保留字，在ES6中是属于关键字</span></span>
<span class="line"><span style="color:#FFCB6B;">implements、interface、package、private、protected、public</span></span>
<span class="line"></span></code></pre></div><p>当你在网上搜“JS保留字”的时候，你会找到很多版本，每个版本都不一样，各有各的说法。<strong>如果有不一样的地方，请以我写的为准</strong>。</p><p>其实，以谁的版本作为标准并不重要，因为有些单词到底是<strong>关键字</strong>还是<strong>保留字</strong>，并没有严格的界限。JS 关于保留字的规则非常复杂，上放列表中的一些单词在特殊情况下其实是可以使用的。</p><p>我们只需要记住一点：上面提到的所有<strong>关键字</strong>和<strong>保留字</strong>，我们都不要用它们作为变量名或者参数名。不要尝试这些奇怪的做法。</p><p>如果你还想了解更多，可以看这几个参考链接：</p><ul><li><p><a href="https://www.zhihu.com/question/472379938" target="_blank" rel="noreferrer">知乎问答：undefined是保留字吗？</a></p></li><li><p>书籍《<a href="https://book.douban.com/subject/35469273/" target="_blank" rel="noreferrer">JavaScript 悟道</a>》的第一章：保留字部分。</p></li></ul>`,29);function c(i,d,y,g,h,C){const s=t("ArticleTopAd");return n(),l("div",null,[e(s),r])}const A=a(o,[["render",c]]);export{_ as __pageData,A as default};
